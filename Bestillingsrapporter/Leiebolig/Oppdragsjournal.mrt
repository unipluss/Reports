<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<StiSerializer version="1.02" type="Net" application="StiReport">
  <Dictionary Ref="1" type="Dictionary" isKey="true">
    <BusinessObjects isList="true" count="0" />
    <Databases isList="true" count="1">
      <Connection Ref="2" type="Stimulsoft.Report.Dictionary.StiSqlDatabase" isKey="true">
        <Alias>Connection</Alias>
        <ConnectionString>Integrated Security=True;Data Source=daniel\uni</ConnectionString>
        <Name>Connection</Name>
      </Connection>
    </Databases>
    <DataSources isList="true" count="5">
      <Bedrift Ref="3" type="Stimulsoft.Report.Dictionary.StiSqlSource" isKey="true">
        <Alias>Bedrift</Alias>
        <Columns isList="true" count="52">
          <value>Adresse,System.String</value>
          <value>Adresse2,System.String</value>
          <value>Arstall,System.Int16</value>
          <value>Bankadresse,System.String</value>
          <value>Bankadresse2,System.String</value>
          <value>Bankadresse3,System.String</value>
          <value>Bankgiro,System.String</value>
          <value>Bankkode,System.String</value>
          <value>Banklandkode,System.String</value>
          <value>Banknavn,System.String</value>
          <value>dcAccountPayments,System.Int32</value>
          <value>dcAgency,System.Int32</value>
          <value>dcAgencyAccountNumber,System.Int32</value>
          <value>dcAgencyFactoringActive,System.Int32</value>
          <value>dcRemindersBeforeDebtCollection,System.Int32</value>
          <value>DirAvtaleID,System.String</value>
          <value>DiremBetAccount,System.Int32</value>
          <value>DirKundeID,System.String</value>
          <value>DirRemFilnavn,System.Int32</value>
          <value>EORInr,System.String</value>
          <value>Foretaksregister,System.Int16</value>
          <value>IBANnr,System.String</value>
          <value>Katalog,System.String</value>
          <value>Klientnr,System.Int16</value>
          <value>Kontaktpers,System.String</value>
          <value>Land,System.String</value>
          <value>Landkode,System.String</value>
          <value>Mailadr,System.String</value>
          <value>MainClientID,System.String</value>
          <value>mainClientNr,System.Int32</value>
          <value>Mobil,System.String</value>
          <value>MVAnr,System.String</value>
          <value>Navn,System.String</value>
          <value>NKLCustNo,System.String</value>
          <value>OCRAvtaleID,System.String</value>
          <value>OCRKundeID,System.String</value>
          <value>Postgiro,System.String</value>
          <value>Postnr,System.String</value>
          <value>Poststed,System.String</value>
          <value>RemitBankgiro,System.String</value>
          <value>RoundRef,System.Int16</value>
          <value>SWIFTkode,System.String</value>
          <value>SWIFTkodeRembBank,System.String</value>
          <value>TeleFax,System.String</value>
          <value>Telefon,System.String</value>
          <value>TPBrukerID,System.String</value>
          <value>TPDivisjon,System.String</value>
          <value>TPForetak,System.String</value>
          <value>Url,System.String</value>
          <value>UseInterimRetFil,System.Int32</value>
          <value>useModulus11,System.Int32</value>
          <value>Versjon,System.Decimal</value>
        </Columns>
        <CommandTimeout>30</CommandTimeout>
        <Dictionary isRef="1" />
        <Name>Bedrift</Name>
        <NameInSource>Connection</NameInSource>
        <Parameters isList="true" count="0" />
        <SqlCommand>select * from y..BEDRIFT</SqlCommand>
      </Bedrift>
      <Oppdrag Ref="4" type="Stimulsoft.Report.Dictionary.StiSqlSource" isKey="true">
        <Alias>Oppdrag</Alias>
        <Columns isList="true" count="11">
          <value>Oppdragsnr,System.Int32</value>
          <value>startdato,System.String</value>
          <value>Name,System.String</value>
          <value>adresse,System.String</value>
          <value>kommune,System.String</value>
          <value>BoligType,System.String</value>
          <value>varighet,System.Int32</value>
          <value>status,System.String</value>
          <value>Navn,System.String</value>
          <value>Ansatte_id,System.Int32</value>
          <value>Id,System.Int32</value>
        </Columns>
        <CommandTimeout>30</CommandTimeout>
        <Dictionary isRef="1" />
        <Name>Oppdrag</Name>
        <NameInSource>Connection</NameInSource>
        <Parameters isList="true" count="0" />
        <SqlCommand>declare @dt varchar(10)
set @dt = '01.'+convert(varchar(2),{Mnd})+'.'+convert(varchar(4),{Aar})
set dateformat dmy
select oa.Id, oa.Oppdragsnr, convert(varchar(20), oa.startdato, 104)as startdato, na.Name,
	bo.Objekt_adresse + ' ' + convert(varchar(8),bo.Objekt_postnummer) + ' '+ bo.Objekt_poststed+ ', '+bo.BoligNummer+ ', '+ convert(varchar(8),byg.gnr)+', '+ convert(varchar(8),byg.bnr) as adresse,
	byg.kommuneNr+ ' '+ ko.Kommunenavn as kommune,
	typ.BoligType, DATEDIFF(DAY, oa.startdato, oa.sluttdato) as varighet, 
	convert(varchar(10),oa.statusId)+ '-'+ st.Status as status,
	ans.Navn, ans.Ansatte_id
	from e..t_oppdragsAvtale oa
inner join e..t_status st on oa.statusId = st.Status_id
left join e..t_oppdragsAvtaleHarBolig harbo on oa.Id = harbo.OppdragsAvtaleId
left join e..t_boligobjekt bo on bo.Objekt_id = harbo.boligId
left join e..t_bygg byg on byg.ID = bo.Bygg_id
left join e..t_forvaltningsAvtale fa on fa.Id = oa.forvaltningsAvtaleId
left join e..t_kunde ei on ei.Kundenummer = fa.kreditorId
left join c..c_Name na on ei.NameID = na.ID
left join utool..Kommune ko on ko.Kommunenr = byg.kommuneNr
left join e..t_boligtype typ on bo.Boligtype_id = typ.BoligType_id
left join e..t_ansatte ans on ans.Ansatte_id = fa.ansvarligMegler 
where CONVERT(datetime, @dt, 104) BETWEEN dateadd(dd, -DAY (oa.startdato) + 1, oa.startdato) and dateadd(dd, -DAY (oa.sluttdato) + 1, oa.sluttdato)
and ans.Ansatte_id in({Ansatt})</SqlCommand>
      </Oppdrag>
      <Kommentar Ref="5" type="Stimulsoft.Report.Dictionary.StiSqlSource" isKey="true">
        <Alias>Kommentar</Alias>
        <Columns isList="true" count="12">
          <value>system,System.Boolean</value>
          <value>slettet,System.Boolean</value>
          <value>utfort,System.Boolean</value>
          <value>sorteringsvekt,System.Int32</value>
          <value>fk_table,System.Int32</value>
          <value>fk_id,System.Int32</value>
          <value>id,System.Int32</value>
          <value>lagtTilDato,System.DateTime</value>
          <value>endretDato,System.DateTime</value>
          <value>tekst,System.String</value>
          <value>endretAv,System.String</value>
          <value>lagtTilAv,System.String</value>
        </Columns>
        <CommandTimeout>30</CommandTimeout>
        <Dictionary isRef="1" />
        <Name>Kommentar</Name>
        <NameInSource>Connection</NameInSource>
        <Parameters isList="true" count="0" />
        <SqlCommand>select * from c..kommentar
	where fk_table = 22 and abs(system) = 1</SqlCommand>
      </Kommentar>
      <Ansatte Ref="6" type="Stimulsoft.Report.Dictionary.StiSqlSource" isKey="true">
        <Alias>Ansatte</Alias>
        <Columns isList="true" count="10">
          <value>ErMegler,System.Boolean</value>
          <value>Ansatte_id,System.Int32</value>
          <value>Omrade,System.Int32</value>
          <value>uniBrukerId,System.Int32</value>
          <value>deaktivert,System.Int16</value>
          <value>Navn,System.String</value>
          <value>Stilling,System.String</value>
          <value>E_post,System.String</value>
          <value>Telefon,System.String</value>
          <value>Mobil,System.String</value>
        </Columns>
        <CommandTimeout>30</CommandTimeout>
        <Dictionary isRef="1" />
        <Name>Ansatte</Name>
        <NameInSource>Connection</NameInSource>
        <Parameters isList="true" count="0" />
        <SqlCommand>SELECT * FROM e..t_ansatte</SqlCommand>
      </Ansatte>
      <maaneder Ref="7" type="Stimulsoft.Report.Dictionary.StiSqlSource" isKey="true">
        <Alias>maaneder</Alias>
        <Columns isList="true" count="1">
          <value>navn,System.String</value>
        </Columns>
        <CommandTimeout>30</CommandTimeout>
        <Dictionary isRef="1" />
        <Name>maaneder</Name>
        <NameInSource>Connection</NameInSource>
        <Parameters isList="true" count="0" />
        <SqlCommand>select navn from utool..maaneder where id = {Mnd}</SqlCommand>
      </maaneder>
    </DataSources>
    <Relations isList="true" count="1">
      <Comments Ref="8" type="DataRelation" isKey="true">
        <Alias>Comments</Alias>
        <ChildColumns isList="true" count="1">
          <value>fk_id</value>
        </ChildColumns>
        <ChildSource isRef="5" />
        <Dictionary isRef="1" />
        <Name>Comments</Name>
        <NameInSource>Relation</NameInSource>
        <ParentColumns isList="true" count="1">
          <value>Id</value>
        </ParentColumns>
        <ParentSource isRef="4" />
      </Comments>
    </Relations>
    <Report isRef="0" />
    <Variables isList="true" count="3">
      <value>,Aar,År,text_x007C_sql_x003D_select_x0020_YEAR_x0028_GETDATE_x0028__x0029__x0029_,System.Int32,,False,False,False</value>
      <value>,Mnd,Måned,combo_x007C_sql_x003D_select_x0020_id_x002C_kortnavn_x0020_from_x0020_utool..maaneder,System.Int32,sql_x003D_SELECT_x0020_MONTH_x0028_GETDATE_x0028__x0029__x0029_,False,False,False</value>
      <value>,Ansatt,Ansatt,combo_x007C_sql_x003D_declare_x0020__x0040_alle_x0020_as_x0020_varchar_x0028_1000_x0029__x002F__x002A__x002A__x002F_declare_x0020__x0040_ans_x0020_as_x0020_varchar_x0028_8_x0029__x002F__x002A__x002A__x002F_DECLARE_x0020_MY_CURSOR_x0020_CURSOR_x0020__x002F__x002A__x002A__x002F__x0020__x0020_LOCAL_x0020_STATIC_x0020_READ_ONLY_x0020_FORWARD_ONLY_x002F__x002A__x002A__x002F_FOR_x0020__x002F__x002A__x002A__x002F_SELECT_x0020_DISTINCT_x0020_convert_x0028_varchar_x0028_8_x0029__x002C_ansatte_id_x0029__x0020__x002F__x002A__x002A__x002F_FROM_x0020_e..t_ansatte_x002F__x002A__x002A__x002F_OPEN_x0020_MY_CURSOR_x002F__x002A__x002A__x002F_FETCH_x0020_NEXT_x0020_FROM_x0020_MY_CURSOR_x0020_INTO_x0020__x0040_ans_x002F__x002A__x002A__x002F_WHILE_x0020__x0040__x0040_FETCH_STATUS_x0020__x003D__x0020_0_x002F__x002A__x002A__x002F_BEGIN_x0020__x002F__x002A__x002A__x002F_if_x0020_isnull_x0028__x0040_alle_x002C__x0020__x0027__x0027__x0029__x0020__x003D__x0020__x0027__x0027__x002F__x002A__x002A__x002F_set_x0020__x0040_alle_x0020__x003D__x0020__x0027__x0027__x0020__x002B__x0040_ans_x002F__x002A__x002A__x002F_else_x002F__x002A__x002A__x002F_set_x0020__x0040_alle_x0020__x003D__x0020__x0040_alle_x0020__x002B__x0020__x0027__x002C__x0027__x0020__x002B__x0020__x0040_ans_x002F__x002A__x002A__x002F_FETCH_x0020_NEXT_x0020_FROM_x0020_MY_CURSOR_x0020_INTO_x0020__x0040_ans_x002F__x002A__x002A__x002F_END_x002F__x002A__x002A__x002F_CLOSE_x0020_MY_CURSOR_x002F__x002A__x002A__x002F_select_x0020__x0040_alle_x002C__x0020__x0027_Alle_x0027__x0020_as_x0020_navn_x002F__x002A__x002A__x002F_union_x0020_all_x002F__x002A__x002A__x002F_select_x0020_convert_x0028_varchar_x0028_5_x0029__x002C_ansatte_id_x0029__x002C__x0020_navn_x0020_from_x0020_e..t_ansatte_x0020_order_x0020_by_x0020_navn_x002F__x002A__x002A__x002F_DEALLOCATE_x0020_MY_CURSOR_x0020_,System.String,,False,False,False</value>
    </Variables>
  </Dictionary>
  <EngineVersion>EngineV2</EngineVersion>
  <GlobalizationStrings isList="true" count="0" />
  <MetaTags isList="true" count="0" />
  <Pages isList="true" count="2">
    <Page1 Ref="9" type="Page" isKey="true">
      <Border>None;Black;2;Solid;False;4;Black</Border>
      <Brush>Transparent</Brush>
      <Components isList="true" count="4">
        <PageHeaderBand1 Ref="10" type="PageHeaderBand" isKey="true">
          <Brush>[183:209:226]</Brush>
          <ClientRectangle>0,0.4,27.7,1.2</ClientRectangle>
          <Components isList="true" count="4">
            <Text22 Ref="11" type="Text" isKey="true">
              <Brush>Transparent</Brush>
              <ClientRectangle>0,0.2,3.6,0.6</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>Arial,12,Bold</Font>
              <Margins>0,0,0,0</Margins>
              <Name>Text22</Name>
              <Page isRef="9" />
              <Parent isRef="10" />
              <Text>Oppdragsjournal</Text>
              <TextBrush>Black</TextBrush>
              <Type>Expression</Type>
            </Text22>
            <Text26 Ref="12" type="Text" isKey="true">
              <Brush>Transparent</Brush>
              <ClientRectangle>23,0.2,4.6,0.4</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>Arial,8,Bold</Font>
              <Margins>0,0,0,0</Margins>
              <Name>Text26</Name>
              <Page isRef="9" />
              <Parent isRef="10" />
              <ShrinkFontToFit>True</ShrinkFontToFit>
              <ShrinkFontToFitMinimumSize>5</ShrinkFontToFitMinimumSize>
              <Text>{Bedrift.Navn}</Text>
              <TextBrush>Black</TextBrush>
            </Text26>
            <Text27 Ref="13" type="Text" isKey="true">
              <Brush>Transparent</Brush>
              <ClientRectangle>25.6,0.6,2,0.6</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>Arial,8,Bold</Font>
              <Margins>0,0,0,0</Margins>
              <Name>Text27</Name>
              <Page isRef="9" />
              <Parent isRef="10" />
              <Text>{Bedrift.Arstall}</Text>
              <TextBrush>Black</TextBrush>
            </Text27>
            <Text2 Ref="14" type="Text" isKey="true">
              <Brush>Transparent</Brush>
              <ClientRectangle>3.6,0.2,7.2,0.6</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>Arial,12,Bold,Point,False,0</Font>
              <Margins>0,0,0,0</Margins>
              <Name>Text2</Name>
              <Page isRef="9" />
              <Parent isRef="10" />
              <Text>{maaneder.navn} {Aar}</Text>
              <TextBrush>Black</TextBrush>
              <Type>Expression</Type>
            </Text2>
          </Components>
          <Conditions isList="true" count="0" />
          <Name>PageHeaderBand1</Name>
          <Page isRef="9" />
          <Parent isRef="9" />
        </PageHeaderBand1>
        <PageFooterBand1 Ref="15" type="PageFooterBand" isKey="true">
          <Border>None;Black;1;Solid;False;4;Black;True</Border>
          <Brush>EmptyBrush</Brush>
          <ClientRectangle>0,18.4,27.7,0.6</ClientRectangle>
          <Components isList="true" count="3">
            <Text3 Ref="16" type="Text" isKey="true">
              <AllowHtmlTags>True</AllowHtmlTags>
              <Brush>Transparent</Brush>
              <ClientRectangle>24,0.1,3.6,0.6</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>Arial,8</Font>
              <Margins>0,0,0,0</Margins>
              <Name>Text3</Name>
              <Page isRef="9" />
              <Parent isRef="15" />
              <Text>Side &lt;b&gt;{PageNumber}&lt;/b&gt; av &lt;b&gt;{TotalPageCount}&lt;/b&gt;</Text>
              <TextBrush>Black</TextBrush>
              <TextQuality>Wysiwyg</TextQuality>
              <Type>Expression</Type>
            </Text3>
            <Text28 Ref="17" type="Text" isKey="true">
              <AllowHtmlTags>True</AllowHtmlTags>
              <Brush>Transparent</Brush>
              <ClientRectangle>2.4,0.1,3.8,0.6</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>Arial,8</Font>
              <Guid>ba927a26a2f241168b584bca48e2c073</Guid>
              <Margins>0,0,0,0</Margins>
              <Name>Text28</Name>
              <Page isRef="9" />
              <Parent isRef="15" />
              <Text>&lt;b&gt;{Time}&lt;/b&gt;</Text>
              <TextBrush>Black</TextBrush>
              <TextQuality>Wysiwyg</TextQuality>
              <Type>Expression</Type>
            </Text28>
            <Text29 Ref="18" type="Text" isKey="true">
              <AllowHtmlTags>True</AllowHtmlTags>
              <Brush>Transparent</Brush>
              <ClientRectangle>0,0.1,2.4,0.6</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>Arial,8</Font>
              <Guid>fd67c8a5c5bb44679a43b01a9fa1d8ad</Guid>
              <Margins>0,0,0,0</Margins>
              <Name>Text29</Name>
              <Page isRef="9" />
              <Parent isRef="15" />
              <Text>Utskriftstidspunkt</Text>
              <TextBrush>Black</TextBrush>
              <TextQuality>Wysiwyg</TextQuality>
              <Type>Expression</Type>
            </Text29>
          </Components>
          <Conditions isList="true" count="0" />
          <Name>PageFooterBand1</Name>
          <Page isRef="9" />
          <Parent isRef="9" />
        </PageFooterBand1>
        <ColumnHeaderBand1 Ref="19" type="Stimulsoft.Report.Components.StiColumnHeaderBand" isKey="true">
          <Brush>[192:202:216]</Brush>
          <ClientRectangle>0,2.4,27.7,0.8</ClientRectangle>
          <Components isList="true" count="9">
            <Text12 Ref="20" type="Text" isKey="true">
              <Brush>Transparent</Brush>
              <ClientRectangle>0,0.2,1.8,0.6</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>Arial,8.25,Bold,Point,False,0</Font>
              <Margins>0,0,0,0</Margins>
              <Name>Text12</Name>
              <Page isRef="9" />
              <Parent isRef="19" />
              <Text>Oppdragsnr
</Text>
              <TextBrush>Black</TextBrush>
              <Type>Expression</Type>
            </Text12>
            <Text13 Ref="21" type="Text" isKey="true">
              <Brush>Transparent</Brush>
              <ClientRectangle>2,0.2,1.6,0.6</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>Arial,8.25,Bold,Point,False,0</Font>
              <Guid>914f1c2242c6466cb147d0bc6bb58145</Guid>
              <Margins>0,0,0,0</Margins>
              <Name>Text13</Name>
              <Page isRef="9" />
              <Parent isRef="19" />
              <Text>Startdato</Text>
              <TextBrush>Black</TextBrush>
              <Type>Expression</Type>
            </Text13>
            <Text14 Ref="22" type="Text" isKey="true">
              <Brush>Transparent</Brush>
              <ClientRectangle>3.8,0.2,3.2,0.6</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>Arial,8.25,Bold,Point,False,0</Font>
              <Margins>0,0,0,0</Margins>
              <Name>Text14</Name>
              <Page isRef="9" />
              <Parent isRef="19" />
              <Text>Eier</Text>
              <TextBrush>Black</TextBrush>
              <Type>Expression</Type>
            </Text14>
            <Text15 Ref="23" type="Text" isKey="true">
              <Brush>Transparent</Brush>
              <ClientRectangle>7.2,0.2,8,0.6</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>Arial,8.25,Bold,Point,False,0</Font>
              <Margins>0,0,0,0</Margins>
              <Name>Text15</Name>
              <Page isRef="9" />
              <Parent isRef="19" />
              <Text>Adresse (hnr, Gnr, bnr)
</Text>
              <TextBrush>Black</TextBrush>
              <Type>Expression</Type>
            </Text15>
            <Text16 Ref="24" type="Text" isKey="true">
              <Brush>Transparent</Brush>
              <ClientRectangle>15.4,0.2,2.6,0.6</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>Arial,8.25,Bold,Point,False,0</Font>
              <Margins>0,0,0,0</Margins>
              <Name>Text16</Name>
              <Page isRef="9" />
              <Parent isRef="19" />
              <Text>Kommune</Text>
              <TextBrush>Black</TextBrush>
              <Type>Expression</Type>
            </Text16>
            <Text17 Ref="25" type="Text" isKey="true">
              <Brush>Transparent</Brush>
              <ClientRectangle>18.2,0.2,1.6,0.6</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>Arial,8.25,Bold,Point,False,0</Font>
              <Margins>0,0,0,0</Margins>
              <Name>Text17</Name>
              <Page isRef="9" />
              <Parent isRef="19" />
              <Text>Boligtype</Text>
              <TextBrush>Black</TextBrush>
              <Type>Expression</Type>
            </Text17>
            <Text18 Ref="26" type="Text" isKey="true">
              <Brush>Transparent</Brush>
              <ClientRectangle>20,0.2,1.2,0.6</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>Arial,8.25,Bold,Point,False,0</Font>
              <Guid>658ac17d8f664e709453b43d272ffda6</Guid>
              <Margins>0,0,0,0</Margins>
              <Name>Text18</Name>
              <Page isRef="9" />
              <Parent isRef="19" />
              <Text>Varighet</Text>
              <TextBrush>Black</TextBrush>
              <Type>Expression</Type>
            </Text18>
            <Text19 Ref="27" type="Text" isKey="true">
              <Brush>Transparent</Brush>
              <ClientRectangle>21.4,0.2,3.2,0.6</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>Arial,8.25,Bold,Point,False,0</Font>
              <Margins>0,0,0,0</Margins>
              <Name>Text19</Name>
              <Page isRef="9" />
              <Parent isRef="19" />
              <Text>Status</Text>
              <TextBrush>Black</TextBrush>
              <Type>Expression</Type>
            </Text19>
            <Text20 Ref="28" type="Text" isKey="true">
              <Brush>Transparent</Brush>
              <ClientRectangle>24.8,0.2,2.8,0.6</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>Arial,8.25,Bold,Point,False,0</Font>
              <Margins>0,0,0,0</Margins>
              <Name>Text20</Name>
              <Page isRef="9" />
              <Parent isRef="19" />
              <Text>Megler</Text>
              <TextBrush>Black</TextBrush>
              <Type>Expression</Type>
            </Text20>
          </Components>
          <Conditions isList="true" count="0" />
          <Name>ColumnHeaderBand1</Name>
          <Page isRef="9" />
          <Parent isRef="9" />
        </ColumnHeaderBand1>
        <DataBand1 Ref="29" type="DataBand" isKey="true">
          <Brush>Transparent</Brush>
          <BusinessObjectGuid isNull="true" />
          <CanShrink>True</CanShrink>
          <ClientRectangle>0,4,27.7,1.6</ClientRectangle>
          <Components isList="true" count="10">
            <Text1 Ref="30" type="Text" isKey="true">
              <Brush>Transparent</Brush>
              <ClientRectangle>0,0,1.6,0.4</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>Arial,8</Font>
              <Margins>0,0,0,0</Margins>
              <Name>Text1</Name>
              <Page isRef="9" />
              <Parent isRef="29" />
              <Text>{Oppdrag.Oppdragsnr}</Text>
              <TextBrush>Black</TextBrush>
              <Type>DataColumn</Type>
            </Text1>
            <Text4 Ref="31" type="Text" isKey="true">
              <Brush>Transparent</Brush>
              <ClientRectangle>1.8,0,1.6,0.4</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>Arial,8</Font>
              <Margins>0,0,0,0</Margins>
              <Name>Text4</Name>
              <Page isRef="9" />
              <Parent isRef="29" />
              <Text>{Oppdrag.startdato}</Text>
              <TextBrush>Black</TextBrush>
              <Type>DataColumn</Type>
            </Text4>
            <Text5 Ref="32" type="Text" isKey="true">
              <Brush>Transparent</Brush>
              <ClientRectangle>3.6,0,3.4,0.4</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>Arial,8</Font>
              <Margins>0,0,0,0</Margins>
              <Name>Text5</Name>
              <Page isRef="9" />
              <Parent isRef="29" />
              <Text>{Oppdrag.Name}</Text>
              <TextBrush>Black</TextBrush>
              <Type>DataColumn</Type>
            </Text5>
            <Text6 Ref="33" type="Text" isKey="true">
              <Brush>Transparent</Brush>
              <ClientRectangle>7.2,0,8,0.4</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>Arial,8</Font>
              <Margins>0,0,0,0</Margins>
              <Name>Text6</Name>
              <Page isRef="9" />
              <Parent isRef="29" />
              <Text>{Oppdrag.adresse}</Text>
              <TextBrush>Black</TextBrush>
              <Type>DataColumn</Type>
            </Text6>
            <Text7 Ref="34" type="Text" isKey="true">
              <Brush>Transparent</Brush>
              <ClientRectangle>15.4,0,2.6,0.4</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>Arial,8</Font>
              <Margins>0,0,0,0</Margins>
              <Name>Text7</Name>
              <Page isRef="9" />
              <Parent isRef="29" />
              <Text>{Oppdrag.kommune}</Text>
              <TextBrush>Black</TextBrush>
              <Type>DataColumn</Type>
            </Text7>
            <Text8 Ref="35" type="Text" isKey="true">
              <Brush>Transparent</Brush>
              <ClientRectangle>18.2,0,1.6,0.4</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>Arial,8</Font>
              <Margins>0,0,0,0</Margins>
              <Name>Text8</Name>
              <Page isRef="9" />
              <Parent isRef="29" />
              <Text>{Oppdrag.BoligType}</Text>
              <TextBrush>Black</TextBrush>
              <Type>DataColumn</Type>
            </Text8>
            <Text9 Ref="36" type="Text" isKey="true">
              <Brush>Transparent</Brush>
              <ClientRectangle>20,0,1.2,0.4</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>Arial,8</Font>
              <Margins>0,0,0,0</Margins>
              <Name>Text9</Name>
              <Page isRef="9" />
              <Parent isRef="29" />
              <Text>{Oppdrag.varighet}</Text>
              <TextBrush>Black</TextBrush>
              <Type>DataColumn</Type>
            </Text9>
            <Text10 Ref="37" type="Text" isKey="true">
              <Brush>Transparent</Brush>
              <ClientRectangle>21.4,0,3.2,0.4</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>Arial,8</Font>
              <Margins>0,0,0,0</Margins>
              <Name>Text10</Name>
              <Page isRef="9" />
              <Parent isRef="29" />
              <Text>{Oppdrag.status}</Text>
              <TextBrush>Black</TextBrush>
              <Type>DataColumn</Type>
            </Text10>
            <Text11 Ref="38" type="Text" isKey="true">
              <Brush>Transparent</Brush>
              <ClientRectangle>24.8,0,2.8,0.4</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>Arial,8</Font>
              <Margins>0,0,0,0</Margins>
              <Name>Text11</Name>
              <Page isRef="9" />
              <Parent isRef="29" />
              <Text>{Oppdrag.Navn}</Text>
              <TextBrush>Black</TextBrush>
              <Type>DataColumn</Type>
            </Text11>
            <SubReport1 Ref="39" type="SubReport" isKey="true">
              <Brush>Transparent</Brush>
              <ClientRectangle>1.8,0.4,25.8,1.2</ClientRectangle>
              <Components isList="true" count="0" />
              <Name>SubReport1</Name>
              <Page isRef="9" />
              <Parent isRef="29" />
              <SubReportPageGuid>245bd06d076f42f3979d6162359b530c</SubReportPageGuid>
            </SubReport1>
          </Components>
          <Conditions isList="true" count="0" />
          <DataRelationName isNull="true" />
          <DataSourceName>Oppdrag</DataSourceName>
          <Filters isList="true" count="0" />
          <KeepChildTogether>True</KeepChildTogether>
          <KeepDetailsTogether>True</KeepDetailsTogether>
          <Name>DataBand1</Name>
          <OddStyle>lightBlue</OddStyle>
          <Page isRef="9" />
          <Parent isRef="9" />
          <Sort isList="true" count="0" />
        </DataBand1>
      </Components>
      <Conditions isList="true" count="0" />
      <Guid>161755a740e24b7f94244106f8c41b15</Guid>
      <Margins>1,1,1,1</Margins>
      <Name>Page1</Name>
      <Orientation>Landscape</Orientation>
      <PageHeight>21</PageHeight>
      <PageWidth>29.7</PageWidth>
      <Report isRef="0" />
      <Watermark Ref="40" type="Stimulsoft.Report.Components.StiWatermark" isKey="true">
        <Font>Arial,100</Font>
        <TextBrush>[50:0:0:0]</TextBrush>
      </Watermark>
    </Page1>
    <subReport_1 Ref="41" type="Page" isKey="true">
      <Border>None;Black;2;Solid;False;4;Black</Border>
      <Brush>Transparent</Brush>
      <Components isList="true" count="1">
        <DataBand2 Ref="42" type="DataBand" isKey="true">
          <Brush>Transparent</Brush>
          <BusinessObjectGuid isNull="true" />
          <CanShrink>True</CanShrink>
          <ClientRectangle>0,0.4,25.8,1.2</ClientRectangle>
          <Components isList="true" count="1">
            <Text21 Ref="43" type="Text" isKey="true">
              <AllowHtmlTags>True</AllowHtmlTags>
              <Brush>Transparent</Brush>
              <CanBreak>True</CanBreak>
              <CanGrow>True</CanGrow>
              <CanShrink>True</CanShrink>
              <ClientRectangle>0,0,25.8,1.2</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>Arial,8</Font>
              <GrowToHeight>True</GrowToHeight>
              <Margins>0,0,0,0</Margins>
              <Name>Text21</Name>
              <Page isRef="41" />
              <Parent isRef="42" />
              <Text>{Kommentar.tekst}</Text>
              <TextBrush>Black</TextBrush>
              <TextOptions>HotkeyPrefix=None, LineLimit=False, RightToLeft=False, Trimming=None, WordWrap=True, Angle=0, FirstTabOffset=40, DistanceBetweenTabs=20,</TextOptions>
              <TextQuality>Wysiwyg</TextQuality>
              <Type>Expression</Type>
            </Text21>
          </Components>
          <Conditions isList="true" count="0" />
          <DataRelationName>Relation</DataRelationName>
          <DataSourceName>Kommentar</DataSourceName>
          <Filters isList="true" count="0" />
          <MasterComponent isRef="29" />
          <Name>DataBand2</Name>
          <Page isRef="41" />
          <Parent isRef="41" />
          <Sort isList="true" count="0" />
        </DataBand2>
      </Components>
      <Conditions isList="true" count="0" />
      <Guid>245bd06d076f42f3979d6162359b530c</Guid>
      <Margins>1,1,1,1</Margins>
      <Name>subReport_1</Name>
      <PageHeight>29.7</PageHeight>
      <PageWidth>27.8</PageWidth>
      <Report isRef="0" />
      <Watermark Ref="44" type="Stimulsoft.Report.Components.StiWatermark" isKey="true">
        <Font>Arial,100</Font>
        <TextBrush>[50:0:0:0]</TextBrush>
      </Watermark>
    </subReport_1>
  </Pages>
  <PrinterSettings Ref="45" type="Stimulsoft.Report.Print.StiPrinterSettings" isKey="true" />
  <ReferencedAssemblies isList="true" count="8">
    <value>System.Dll</value>
    <value>System.Drawing.Dll</value>
    <value>System.Windows.Forms.Dll</value>
    <value>System.Data.Dll</value>
    <value>System.Xml.Dll</value>
    <value>Stimulsoft.Controls.Dll</value>
    <value>Stimulsoft.Base.Dll</value>
    <value>Stimulsoft.Report.Dll</value>
  </ReferencedAssemblies>
  <ReportAlias>Report</ReportAlias>
  <ReportChanged>12/10/2015 9:01:09 AM</ReportChanged>
  <ReportCreated>4/23/2014 2:37:24 PM</ReportCreated>
  <ReportFile>C:\uni\Oppdragsjournal.mrt</ReportFile>
  <ReportGuid>c8bdb1e80f2f4d0ab377cda023c90dad</ReportGuid>
  <ReportName>Report</ReportName>
  <ReportUnit>Centimeters</ReportUnit>
  <ReportVersion>2012.1.1300</ReportVersion>
  <Script>using System;
using System.Drawing;
using System.Windows.Forms;
using System.Data;
using Stimulsoft.Controls;
using Stimulsoft.Base.Drawing;
using Stimulsoft.Report;
using Stimulsoft.Report.Dialogs;
using Stimulsoft.Report.Components;

namespace Reports
{
    public class Report : Stimulsoft.Report.StiReport
    {
        public Report()        {
            this.InitializeComponent();
        }

        #region StiReport Designer generated code - do not modify
        public int FkType;
        public int FkId;
        public Stimulsoft.Report.Components.StiPage Page1;
        public Stimulsoft.Report.Components.StiPageHeaderBand PageHeaderBand1;
        public Stimulsoft.Report.Components.StiText Text22;
        public Stimulsoft.Report.Components.StiText Text26;
        public Stimulsoft.Report.Components.StiText Text27;
        public Stimulsoft.Report.Components.StiPageFooterBand PageFooterBand1;
        public Stimulsoft.Report.Components.StiText Text3;
        public Stimulsoft.Report.Components.StiText Text28;
        public Stimulsoft.Report.Components.StiText Text29;
        public Stimulsoft.Report.Components.StiDataBand DataBand1;
        public Stimulsoft.Report.Components.StiText Text1;
        public Stimulsoft.Report.Components.StiText Text4;
        public Stimulsoft.Report.Components.StiText Text5;
        public Stimulsoft.Report.Components.StiText Text6;
        public Stimulsoft.Report.Components.StiText Text7;
        public Stimulsoft.Report.Components.StiText Text8;
        public Stimulsoft.Report.Components.StiText Text9;
        public Stimulsoft.Report.Components.StiText Text10;
        public Stimulsoft.Report.Components.StiText Text11;
        public Stimulsoft.Report.Components.StiWatermark Page1_Watermark;
        public Stimulsoft.Report.Print.StiPrinterSettings Report_PrinterSettings;
        public Stimulsoft.Report.StiStyle StyleAvvik;
        public Stimulsoft.Report.StiStyle StyleBra;
        public Stimulsoft.Report.StiStyle StyleMindreBra;
        public Stimulsoft.Report.StiStyle StyleIkkeStartet;
        public Stimulsoft.Report.StiStyle StyleAktivitetOpprettet;
        public BedriftDataSource Bedrift;
        public OppdragDataSource Oppdrag;
        public AnsatteDataSource Ansatte;
        
        public void Text22__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = "Oppdragsjournal";
        }
        
        public void Text26__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = ToString(sender, Bedrift.Navn, true);
        }
        
        public void Text27__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = ToString(sender, Bedrift.Arstall, true);
        }
        
        public void Text3__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = "#%#Side {PageNumber} av {TotalPageCount}";
            e.StoreToPrinted = true;
        }
        
        public System.String Text3_GetValue_End(Stimulsoft.Report.Components.StiComponent sender)
        {
            return "Side " + ToString(sender, PageNumber, true) + " av " + ToString(sender, TotalPageCount, true);
        }
        
        public void Text28__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = ToString(sender, Time, true);
        }
        
        public void Text29__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = "Utskriftstidspunkt";
        }
        
        public void Text1__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = ToString(sender, Oppdrag.Oppdragsnr, true);
        }
        
        public void Text4__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = ToString(sender, Oppdrag.startdato, true);
        }
        
        public void Text5__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = ToString(sender, Oppdrag.Name, true);
        }
        
        public void Text6__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = ToString(sender, Oppdrag.adresse, true);
        }
        
        public void Text7__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = ToString(sender, Oppdrag.kommune, true);
        }
        
        public void Text8__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = ToString(sender, Oppdrag.BoligType, true);
        }
        
        public void Text9__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = ToString(sender, Oppdrag.varighet, true);
        }
        
        public void Text10__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = ToString(sender, Oppdrag.status, true);
        }
        
        public void Text11__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = ToString(sender, Oppdrag.Navn, true);
        }
        
        public void ReportWordsToEnd__EndRender(object sender, System.EventArgs e)
        {
            this.Text3.SetText(new Stimulsoft.Report.Components.StiGetValue(this.Text3_GetValue_End));
        }
        
        private void InitializeComponent()
        {
            this.Ansatte = new AnsatteDataSource();
            this.Oppdrag = new OppdragDataSource();
            this.Bedrift = new BedriftDataSource();
            this.Dictionary.Variables.Add(new Stimulsoft.Report.Dictionary.StiVariable("", "FkType", "Velg", "combo|3000,Bygg;3001,Etasje;3002,Boligobjekt;3003,Fellesareal;3004,Anlegg;3005,Boligområde", typeof(int), "3002", false, Stimulsoft.Report.Dictionary.StiVariableInitBy.Value, false));
            this.Dictionary.Variables.Add(new Stimulsoft.Report.Dictionary.StiVariable("", "FkId", "Id", "text|", typeof(int), "43", false, Stimulsoft.Report.Dictionary.StiVariableInitBy.Value, false));
            this.NeedsCompiling = false;
            // 
            // Variables init
            // 
            this.FkType = 3002;
            this.FkId = 43;
            this.EngineVersion = Stimulsoft.Report.Engine.StiEngineVersion.EngineV2;
            this.ReferencedAssemblies = new System.String[] {
                    "System.Dll",
                    "System.Drawing.Dll",
                    "System.Windows.Forms.Dll",
                    "System.Data.Dll",
                    "System.Xml.Dll",
                    "Stimulsoft.Controls.Dll",
                    "Stimulsoft.Base.Dll",
                    "Stimulsoft.Report.Dll"};
            this.ReportAlias = "Report";
            // 
            // ReportChanged
            // 
            this.ReportChanged = new DateTime(2015, 12, 7, 11, 19, 32, 175);
            // 
            // ReportCreated
            // 
            this.ReportCreated = new DateTime(2014, 4, 23, 14, 37, 24, 0);
            this.ReportFile = "C:\\unireport\\Oppdragsjournal.mrt";
            this.ReportGuid = "db8a514fee874a78affd533d7bb28561";
            this.ReportName = "Report";
            this.ReportUnit = Stimulsoft.Report.StiReportUnitType.Centimeters;
            this.ReportVersion = "2012.1.1300";
            this.ScriptLanguage = Stimulsoft.Report.StiReportLanguageType.CSharp;
            // 
            // Page1
            // 
            this.Page1 = new Stimulsoft.Report.Components.StiPage();
            this.Page1.Guid = "161755a740e24b7f94244106f8c41b15";
            this.Page1.Name = "Page1";
            this.Page1.Orientation = Stimulsoft.Report.Components.StiPageOrientation.Landscape;
            this.Page1.PageHeight = 21;
            this.Page1.PageWidth = 29.7;
            this.Page1.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.None, System.Drawing.Color.Black, 2, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Page1.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            // 
            // PageHeaderBand1
            // 
            this.PageHeaderBand1 = new Stimulsoft.Report.Components.StiPageHeaderBand();
            this.PageHeaderBand1.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(0, 0.4, 27.7, 1.4);
            this.PageHeaderBand1.Name = "PageHeaderBand1";
            this.PageHeaderBand1.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.None, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.PageHeaderBand1.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.SystemColors.ControlLight);
            // 
            // Text22
            // 
            this.Text22 = new Stimulsoft.Report.Components.StiText();
            this.Text22.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(0, 0, 4.4, 0.6);
            this.Text22.Name = "Text22";
            this.Text22.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text22__GetValue);
            this.Text22.Type = Stimulsoft.Report.Components.StiSystemTextType.Expression;
            this.Text22.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.None, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text22.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text22.Font = new System.Drawing.Font("Arial", 12F, System.Drawing.FontStyle.Bold);
            this.Text22.Guid = null;
            this.Text22.Indicator = null;
            this.Text22.Interaction = null;
            this.Text22.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text22.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text22.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text26
            // 
            this.Text26 = new Stimulsoft.Report.Components.StiText();
            this.Text26.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(23, 0, 4.6, 0.6);
            this.Text26.Name = "Text26";
            this.Text26.ShrinkFontToFit = true;
            this.Text26.ShrinkFontToFitMinimumSize = 5F;
            this.Text26.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text26__GetValue);
            this.Text26.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.None, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text26.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text26.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.Text26.Guid = null;
            this.Text26.Indicator = null;
            this.Text26.Interaction = null;
            this.Text26.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text26.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text26.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text27
            // 
            this.Text27 = new Stimulsoft.Report.Components.StiText();
            this.Text27.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(26.6, 0.8, 1, 0.6);
            this.Text27.Name = "Text27";
            this.Text27.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text27__GetValue);
            this.Text27.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.None, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text27.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text27.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.Text27.Guid = null;
            this.Text27.Indicator = null;
            this.Text27.Interaction = null;
            this.Text27.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text27.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text27.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            this.PageHeaderBand1.Guid = null;
            this.PageHeaderBand1.Interaction = null;
            // 
            // PageFooterBand1
            // 
            this.PageFooterBand1 = new Stimulsoft.Report.Components.StiPageFooterBand();
            this.PageFooterBand1.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(0, 18.2, 27.7, 0.8);
            this.PageFooterBand1.Name = "PageFooterBand1";
            this.PageFooterBand1.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.None, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.PageFooterBand1.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            // 
            // Text3
            // 
            this.Text3 = new Stimulsoft.Report.Components.StiText();
            this.Text3.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(15, 0.1, 3.6, 0.6);
            this.Text3.Name = "Text3";
            this.Text3.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text3__GetValue);
            this.Text3.Type = Stimulsoft.Report.Components.StiSystemTextType.Expression;
            this.Text3.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.None, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text3.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text3.Font = new System.Drawing.Font("Arial", 8F);
            this.Text3.Guid = null;
            this.Text3.Indicator = null;
            this.Text3.Interaction = null;
            this.Text3.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text3.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text3.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text28
            // 
            this.Text28 = new Stimulsoft.Report.Components.StiText();
            this.Text28.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(3, 0.1, 1.6, 0.6);
            this.Text28.Guid = "ba927a26a2f241168b584bca48e2c073";
            this.Text28.Name = "Text28";
            this.Text28.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text28__GetValue);
            this.Text28.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.None, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text28.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text28.Font = new System.Drawing.Font("Arial", 8F);
            this.Text28.Indicator = null;
            this.Text28.Interaction = null;
            this.Text28.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text28.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text28.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text29
            // 
            this.Text29 = new Stimulsoft.Report.Components.StiText();
            this.Text29.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(0, 0.1, 3, 0.6);
            this.Text29.Guid = "fd67c8a5c5bb44679a43b01a9fa1d8ad";
            this.Text29.Name = "Text29";
            this.Text29.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text29__GetValue);
            this.Text29.Type = Stimulsoft.Report.Components.StiSystemTextType.Expression;
            this.Text29.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.None, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text29.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text29.Font = new System.Drawing.Font("Arial", 8F);
            this.Text29.Indicator = null;
            this.Text29.Interaction = null;
            this.Text29.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text29.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text29.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            this.PageFooterBand1.Guid = null;
            this.PageFooterBand1.Interaction = null;
            // 
            // DataBand1
            // 
            this.DataBand1 = new Stimulsoft.Report.Components.StiDataBand();
            this.DataBand1.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(0, 2.6, 27.7, 0.8);
            this.DataBand1.BeforePrint += new System.EventHandler(this.DataBand1_Conditions);
            this.DataBand1.DataSourceName = "Oppdrag";
            this.DataBand1.Name = "DataBand1";
            this.DataBand1.Sort = new System.String[0];
            this.DataBand1.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.None, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.DataBand1.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.DataBand1.BusinessObjectGuid = null;
            // 
            // Text1
            // 
            this.Text1 = new Stimulsoft.Report.Components.StiText();
            this.Text1.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(0, 0, 1.4, 0.6);
            this.Text1.Name = "Text1";
            this.Text1.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text1__GetValue);
            this.Text1.Type = Stimulsoft.Report.Components.StiSystemTextType.DataColumn;
            this.Text1.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.None, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text1.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text1.Font = new System.Drawing.Font("Arial", 8F);
            this.Text1.Guid = null;
            this.Text1.Indicator = null;
            this.Text1.Interaction = null;
            this.Text1.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text1.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text1.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text4
            // 
            this.Text4 = new Stimulsoft.Report.Components.StiText();
            this.Text4.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(1.6, 0, 1.4, 0.6);
            this.Text4.Name = "Text4";
            this.Text4.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text4__GetValue);
            this.Text4.Type = Stimulsoft.Report.Components.StiSystemTextType.DataColumn;
            this.Text4.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.None, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text4.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text4.Font = new System.Drawing.Font("Arial", 8F);
            this.Text4.Guid = null;
            this.Text4.Indicator = null;
            this.Text4.Interaction = null;
            this.Text4.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text4.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text4.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text5
            // 
            this.Text5 = new Stimulsoft.Report.Components.StiText();
            this.Text5.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(3, 0, 1.6, 0.6);
            this.Text5.Name = "Text5";
            this.Text5.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text5__GetValue);
            this.Text5.Type = Stimulsoft.Report.Components.StiSystemTextType.DataColumn;
            this.Text5.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.None, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text5.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text5.Font = new System.Drawing.Font("Arial", 8F);
            this.Text5.Guid = null;
            this.Text5.Indicator = null;
            this.Text5.Interaction = null;
            this.Text5.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text5.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text5.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text6
            // 
            this.Text6 = new Stimulsoft.Report.Components.StiText();
            this.Text6.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(4.8, 0, 5.8, 0.6);
            this.Text6.Name = "Text6";
            this.Text6.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text6__GetValue);
            this.Text6.Type = Stimulsoft.Report.Components.StiSystemTextType.DataColumn;
            this.Text6.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.None, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text6.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text6.Font = new System.Drawing.Font("Arial", 8F);
            this.Text6.Guid = null;
            this.Text6.Indicator = null;
            this.Text6.Interaction = null;
            this.Text6.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text6.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text6.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text7
            // 
            this.Text7 = new Stimulsoft.Report.Components.StiText();
            this.Text7.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(10.8, 0, 2.8, 0.6);
            this.Text7.Name = "Text7";
            this.Text7.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text7__GetValue);
            this.Text7.Type = Stimulsoft.Report.Components.StiSystemTextType.DataColumn;
            this.Text7.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.None, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text7.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text7.Font = new System.Drawing.Font("Arial", 8F);
            this.Text7.Guid = null;
            this.Text7.Indicator = null;
            this.Text7.Interaction = null;
            this.Text7.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text7.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text7.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text8
            // 
            this.Text8 = new Stimulsoft.Report.Components.StiText();
            this.Text8.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(14, 0, 5, 0.6);
            this.Text8.Name = "Text8";
            this.Text8.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text8__GetValue);
            this.Text8.Type = Stimulsoft.Report.Components.StiSystemTextType.DataColumn;
            this.Text8.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.None, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text8.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text8.Font = new System.Drawing.Font("Arial", 8F);
            this.Text8.Guid = null;
            this.Text8.Indicator = null;
            this.Text8.Interaction = null;
            this.Text8.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text8.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text8.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text9
            // 
            this.Text9 = new Stimulsoft.Report.Components.StiText();
            this.Text9.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(19.2, 0, 1.8, 0.6);
            this.Text9.Name = "Text9";
            this.Text9.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text9__GetValue);
            this.Text9.Type = Stimulsoft.Report.Components.StiSystemTextType.DataColumn;
            this.Text9.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.None, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text9.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text9.Font = new System.Drawing.Font("Arial", 8F);
            this.Text9.Guid = null;
            this.Text9.Indicator = null;
            this.Text9.Interaction = null;
            this.Text9.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text9.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text9.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text10
            // 
            this.Text10 = new Stimulsoft.Report.Components.StiText();
            this.Text10.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(21.4, 0, 3, 0.6);
            this.Text10.Name = "Text10";
            this.Text10.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text10__GetValue);
            this.Text10.Type = Stimulsoft.Report.Components.StiSystemTextType.DataColumn;
            this.Text10.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.None, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text10.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text10.Font = new System.Drawing.Font("Arial", 8F);
            this.Text10.Guid = null;
            this.Text10.Indicator = null;
            this.Text10.Interaction = null;
            this.Text10.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text10.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text10.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text11
            // 
            this.Text11 = new Stimulsoft.Report.Components.StiText();
            this.Text11.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(24.8, 0, 2.6, 0.6);
            this.Text11.Name = "Text11";
            this.Text11.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text11__GetValue);
            this.Text11.Type = Stimulsoft.Report.Components.StiSystemTextType.DataColumn;
            this.Text11.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.None, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text11.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text11.Font = new System.Drawing.Font("Arial", 8F);
            this.Text11.Guid = null;
            this.Text11.Indicator = null;
            this.Text11.Interaction = null;
            this.Text11.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text11.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text11.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            this.DataBand1.DataRelationName = null;
            this.DataBand1.Guid = null;
            this.DataBand1.Interaction = null;
            this.DataBand1.MasterComponent = null;
            this.Page1.ExcelSheetValue = null;
            this.Page1.Interaction = null;
            this.Page1.Margins = new Stimulsoft.Report.Components.StiMargins(1, 1, 1, 1);
            this.Page1_Watermark = new Stimulsoft.Report.Components.StiWatermark();
            this.Page1_Watermark.Font = new System.Drawing.Font("Arial", 100F);
            this.Page1_Watermark.Image = null;
            this.Page1_Watermark.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.FromArgb(50, 0, 0, 0));
            this.Report_PrinterSettings = new Stimulsoft.Report.Print.StiPrinterSettings();
            // 
            // StyleAvvik
            // 
            this.StyleAvvik = new Stimulsoft.Report.StiStyle();
            this.StyleAvvik.Description = "";
            this.StyleAvvik.Name = "Avvik";
            this.StyleAvvik.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.None, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.StyleAvvik.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.LightCoral);
            this.StyleAvvik.Font = new System.Drawing.Font("Arial", 8F);
            this.StyleAvvik.Image = null;
            this.StyleAvvik.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            // 
            // StyleBra
            // 
            this.StyleBra = new Stimulsoft.Report.StiStyle();
            this.StyleBra.Description = "";
            this.StyleBra.Name = "Bra";
            this.StyleBra.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.None, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.StyleBra.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.LightGreen);
            this.StyleBra.Font = new System.Drawing.Font("Arial", 8F);
            this.StyleBra.Image = null;
            this.StyleBra.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            // 
            // StyleMindreBra
            // 
            this.StyleMindreBra = new Stimulsoft.Report.StiStyle();
            this.StyleMindreBra.Description = "";
            this.StyleMindreBra.Name = "MindreBra";
            this.StyleMindreBra.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.None, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.StyleMindreBra.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Khaki);
            this.StyleMindreBra.Font = new System.Drawing.Font("Arial", 8F);
            this.StyleMindreBra.Image = null;
            this.StyleMindreBra.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            // 
            // StyleIkkeStartet
            // 
            this.StyleIkkeStartet = new Stimulsoft.Report.StiStyle();
            this.StyleIkkeStartet.Description = "";
            this.StyleIkkeStartet.Name = "IkkeStartet";
            this.StyleIkkeStartet.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.None, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.StyleIkkeStartet.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.StyleIkkeStartet.Font = new System.Drawing.Font("Arial", 8F);
            this.StyleIkkeStartet.Image = null;
            this.StyleIkkeStartet.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            // 
            // StyleAktivitetOpprettet
            // 
            this.StyleAktivitetOpprettet = new Stimulsoft.Report.StiStyle();
            this.StyleAktivitetOpprettet.Description = "";
            this.StyleAktivitetOpprettet.Name = "AktivitetOpprettet";
            this.StyleAktivitetOpprettet.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.None, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.StyleAktivitetOpprettet.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.PeachPuff);
            this.StyleAktivitetOpprettet.Font = new System.Drawing.Font("Arial", 8F);
            this.StyleAktivitetOpprettet.Image = null;
            this.StyleAktivitetOpprettet.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.PrinterSettings = this.Report_PrinterSettings;
            this.Page1.Report = this;
            this.Page1.Watermark = this.Page1_Watermark;
            this.PageHeaderBand1.Page = this.Page1;
            this.PageHeaderBand1.Parent = this.Page1;
            this.Text22.Page = this.Page1;
            this.Text22.Parent = this.PageHeaderBand1;
            this.Text26.Page = this.Page1;
            this.Text26.Parent = this.PageHeaderBand1;
            this.Text27.Page = this.Page1;
            this.Text27.Parent = this.PageHeaderBand1;
            this.PageFooterBand1.Page = this.Page1;
            this.PageFooterBand1.Parent = this.Page1;
            this.Text3.Page = this.Page1;
            this.Text3.Parent = this.PageFooterBand1;
            this.Text28.Page = this.Page1;
            this.Text28.Parent = this.PageFooterBand1;
            this.Text29.Page = this.Page1;
            this.Text29.Parent = this.PageFooterBand1;
            this.DataBand1.Page = this.Page1;
            this.DataBand1.Parent = this.Page1;
            this.Text1.Page = this.Page1;
            this.Text1.Parent = this.DataBand1;
            this.Text4.Page = this.Page1;
            this.Text4.Parent = this.DataBand1;
            this.Text5.Page = this.Page1;
            this.Text5.Parent = this.DataBand1;
            this.Text6.Page = this.Page1;
            this.Text6.Parent = this.DataBand1;
            this.Text7.Page = this.Page1;
            this.Text7.Parent = this.DataBand1;
            this.Text8.Page = this.Page1;
            this.Text8.Parent = this.DataBand1;
            this.Text9.Page = this.Page1;
            this.Text9.Parent = this.DataBand1;
            this.Text10.Page = this.Page1;
            this.Text10.Parent = this.DataBand1;
            this.Text11.Page = this.Page1;
            this.Text11.Parent = this.DataBand1;
            this.EndRender += new System.EventHandler(this.ReportWordsToEnd__EndRender);
            // 
            // Add to PageHeaderBand1.Components
            // 
            this.PageHeaderBand1.Components.Clear();
            this.PageHeaderBand1.Components.AddRange(new Stimulsoft.Report.Components.StiComponent[] {
                        this.Text22,
                        this.Text26,
                        this.Text27});
            // 
            // Add to PageFooterBand1.Components
            // 
            this.PageFooterBand1.Components.Clear();
            this.PageFooterBand1.Components.AddRange(new Stimulsoft.Report.Components.StiComponent[] {
                        this.Text3,
                        this.Text28,
                        this.Text29});
            // 
            // Add to DataBand1.Components
            // 
            this.DataBand1.Components.Clear();
            this.DataBand1.Components.AddRange(new Stimulsoft.Report.Components.StiComponent[] {
                        this.Text1,
                        this.Text4,
                        this.Text5,
                        this.Text6,
                        this.Text7,
                        this.Text8,
                        this.Text9,
                        this.Text10,
                        this.Text11});
            // 
            // Add to Page1.Components
            // 
            this.Page1.Components.Clear();
            this.Page1.Components.AddRange(new Stimulsoft.Report.Components.StiComponent[] {
                        this.PageHeaderBand1,
                        this.PageFooterBand1,
                        this.DataBand1});
            // 
            // Add to Pages
            // 
            this.Pages.Clear();
            this.Pages.AddRange(new Stimulsoft.Report.Components.StiPage[] {
                        this.Page1});
            // 
            // Add to Styles
            // 
            this.Styles.Clear();
            this.Styles.AddRange(new Stimulsoft.Report.StiBaseStyle[] {
                        this.StyleAvvik,
                        this.StyleBra,
                        this.StyleMindreBra,
                        this.StyleIkkeStartet,
                        this.StyleAktivitetOpprettet});
            this.Bedrift.Columns.AddRange(new Stimulsoft.Report.Dictionary.StiDataColumn[] {
                        new Stimulsoft.Report.Dictionary.StiDataColumn("Adresse", "Adresse", "Adresse", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("Adresse2", "Adresse2", "Adresse2", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("Arstall", "Arstall", "Arstall", typeof(short)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("Bankadresse", "Bankadresse", "Bankadresse", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("Bankadresse2", "Bankadresse2", "Bankadresse2", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("Bankadresse3", "Bankadresse3", "Bankadresse3", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("Bankgiro", "Bankgiro", "Bankgiro", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("Bankkode", "Bankkode", "Bankkode", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("Banklandkode", "Banklandkode", "Banklandkode", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("Banknavn", "Banknavn", "Banknavn", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("dcAccountPayments", "dcAccountPayments", "dcAccountPayments", typeof(int)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("dcAgency", "dcAgency", "dcAgency", typeof(int)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("dcAgencyAccountNumber", "dcAgencyAccountNumber", "dcAgencyAccountNumber", typeof(int)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("dcAgencyFactoringActive", "dcAgencyFactoringActive", "dcAgencyFactoringActive", typeof(int)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("dcRemindersBeforeDebtCollection", "dcRemindersBeforeDebtCollection", "dcRemindersBeforeDebtCollection", typeof(int)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("DirAvtaleID", "DirAvtaleID", "DirAvtaleID", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("DiremBetAccount", "DiremBetAccount", "DiremBetAccount", typeof(int)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("DirKundeID", "DirKundeID", "DirKundeID", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("DirRemFilnavn", "DirRemFilnavn", "DirRemFilnavn", typeof(int)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("EORInr", "EORInr", "EORInr", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("Foretaksregister", "Foretaksregister", "Foretaksregister", typeof(short)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("IBANnr", "IBANnr", "IBANnr", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("Katalog", "Katalog", "Katalog", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("Klientnr", "Klientnr", "Klientnr", typeof(short)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("Kontaktpers", "Kontaktpers", "Kontaktpers", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("Land", "Land", "Land", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("Landkode", "Landkode", "Landkode", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("Mailadr", "Mailadr", "Mailadr", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("MainClientID", "MainClientID", "MainClientID", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("mainClientNr", "mainClientNr", "mainClientNr", typeof(int)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("Mobil", "Mobil", "Mobil", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("MVAnr", "MVAnr", "MVAnr", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("Navn", "Navn", "Navn", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("NKLCustNo", "NKLCustNo", "NKLCustNo", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("OCRAvtaleID", "OCRAvtaleID", "OCRAvtaleID", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("OCRKundeID", "OCRKundeID", "OCRKundeID", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("Postgiro", "Postgiro", "Postgiro", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("Postnr", "Postnr", "Postnr", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("Poststed", "Poststed", "Poststed", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("RemitBankgiro", "RemitBankgiro", "RemitBankgiro", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("RoundRef", "RoundRef", "RoundRef", typeof(short)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("SWIFTkode", "SWIFTkode", "SWIFTkode", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("SWIFTkodeRembBank", "SWIFTkodeRembBank", "SWIFTkodeRembBank", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TeleFax", "TeleFax", "TeleFax", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("Telefon", "Telefon", "Telefon", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TPBrukerID", "TPBrukerID", "TPBrukerID", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TPDivisjon", "TPDivisjon", "TPDivisjon", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TPForetak", "TPForetak", "TPForetak", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("Url", "Url", "Url", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("UseInterimRetFil", "UseInterimRetFil", "UseInterimRetFil", typeof(int)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("useModulus11", "useModulus11", "useModulus11", typeof(int)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("Versjon", "Versjon", "Versjon", typeof(decimal))});
            this.DataSources.Add(this.Bedrift);
            this.Oppdrag.Columns.AddRange(new Stimulsoft.Report.Dictionary.StiDataColumn[] {
                        new Stimulsoft.Report.Dictionary.StiDataColumn("Oppdragsnr", "Oppdragsnr", "Oppdragsnr", typeof(int)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("startdato", "startdato", "startdato", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("Name", "Name", "Name", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("adresse", "adresse", "adresse", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("kommune", "kommune", "kommune", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("BoligType", "BoligType", "BoligType", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("varighet", "varighet", "varighet", typeof(int)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("status", "status", "status", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("Navn", "Navn", "Navn", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("Ansatte_id", "Ansatte_id", "Ansatte_id", typeof(int))});
            this.DataSources.Add(this.Oppdrag);
            this.Ansatte.Columns.AddRange(new Stimulsoft.Report.Dictionary.StiDataColumn[] {
                        new Stimulsoft.Report.Dictionary.StiDataColumn("ErMegler", "ErMegler", "ErMegler", typeof(bool)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("Ansatte_id", "Ansatte_id", "Ansatte_id", typeof(int)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("Omrade", "Omrade", "Omrade", typeof(int)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("uniBrukerId", "uniBrukerId", "uniBrukerId", typeof(int)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("deaktivert", "deaktivert", "deaktivert", typeof(short)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("Navn", "Navn", "Navn", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("Stilling", "Stilling", "Stilling", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("E_post", "E_post", "E_post", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("Telefon", "Telefon", "Telefon", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("Mobil", "Mobil", "Mobil", typeof(string))});
            this.DataSources.Add(this.Ansatte);
            this.Dictionary.Databases.Add(new Stimulsoft.Report.Dictionary.StiSqlDatabase("Connection", "Connection", "Integrated Security=True;Data Source=daniel\\uni", false));
            this.Bedrift.Connecting += new System.EventHandler(this.GetBedrift_SqlCommand);
            this.Oppdrag.Connecting += new System.EventHandler(this.GetOppdrag_SqlCommand);
            this.Ansatte.Connecting += new System.EventHandler(this.GetAnsatte_SqlCommand);
        }
        
        public void GetBedrift_SqlCommand(object sender, System.EventArgs e)
        {
            this.Bedrift.SqlCommand = "select * from y..BEDRIFT";
        }
        
        public void GetOppdrag_SqlCommand(object sender, System.EventArgs e)
        {
            this.Oppdrag.SqlCommand = "set dateformat dmy\r\nselect oa.Oppdragsnr, FORMAT(oa.startdato, \'dd.MM.yyyy\')as startdato, na.Name,\r\n\tCONCAT(bo.Objekt_adresse, \' \', bo.Objekt_postnummer, \' \', bo.Objekt_poststed, \', \',bo.BoligNummer, \', \', byg.gnr,\', \', byg.bnr) as adresse,\r\n\tCONCAT(byg.kommuneNr, \' \', ko.Kommunenavn) as kommune,\r\n\ttyp.BoligType, DATEDIFF(DAY, oa.startdato, oa.sluttdato) as varighet, \r\n\tconcat(oa.statusId, \'-\', st.Status) as status,\r\n\tans.Navn, ans.Ansatte_id\r\n\tfrom e..t_oppdragsAvtale oa\r\ninner join e..t_status st on oa.statusId = st.Status_id\r\nleft join e..t_oppdragsAvtaleHarBolig harbo on oa.Id = harbo.OppdragsAvtaleId\r\nleft join e..t_boligobjekt bo on bo.Objekt_id = harbo.boligId\r\nleft join e..t_bygg byg on byg.ID = bo.Bygg_id\r\nleft join e..t_forvaltningsAvtale fa on fa.Id = oa.forvaltningsAvtaleId\r\nleft join e..t_kunde ei on ei.Kundenummer = fa.kreditorId\r\nleft join c..c_Name na on ei.NameID = na.ID\r\nleft join utool..Kommune ko on ko.Kommunenr = byg.kommuneNr\r\nleft join e..t_boligtype typ on bo.Boligtype_id = typ.BoligTyp" +
"e_id\r\nleft join e..t_ansatte ans on ans.Ansatte_id = fa.ansvarligMegler\r\nwhere CONVERT(datetime, \'01.01.2015\') BETWEEN oa.startdato and oa.sluttdato";
        }
        
        public void GetAnsatte_SqlCommand(object sender, System.EventArgs e)
        {
            this.Ansatte.SqlCommand = "SELECT * FROM e..t_ansatte";
        }
        
        #region DataSource Bedrift
        public class BedriftDataSource : Stimulsoft.Report.Dictionary.StiSqlSource
        {
            
            public BedriftDataSource() : 
                    base("Connection", "Bedrift", "Bedrift", "", true, false, 30)
            {
            }
            
            public virtual string Adresse
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["Adresse"], typeof(string), true)));
                }
            }
            
            public virtual string Adresse2
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["Adresse2"], typeof(string), true)));
                }
            }
            
            public virtual short Arstall
            {
                get
                {
                    return ((short)(StiReport.ChangeType(this["Arstall"], typeof(short), true)));
                }
            }
            
            public virtual string Bankadresse
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["Bankadresse"], typeof(string), true)));
                }
            }
            
            public virtual string Bankadresse2
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["Bankadresse2"], typeof(string), true)));
                }
            }
            
            public virtual string Bankadresse3
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["Bankadresse3"], typeof(string), true)));
                }
            }
            
            public virtual string Bankgiro
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["Bankgiro"], typeof(string), true)));
                }
            }
            
            public virtual string Bankkode
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["Bankkode"], typeof(string), true)));
                }
            }
            
            public virtual string Banklandkode
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["Banklandkode"], typeof(string), true)));
                }
            }
            
            public virtual string Banknavn
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["Banknavn"], typeof(string), true)));
                }
            }
            
            public virtual int dcAccountPayments
            {
                get
                {
                    return ((int)(StiReport.ChangeType(this["dcAccountPayments"], typeof(int), true)));
                }
            }
            
            public virtual int dcAgency
            {
                get
                {
                    return ((int)(StiReport.ChangeType(this["dcAgency"], typeof(int), true)));
                }
            }
            
            public virtual int dcAgencyAccountNumber
            {
                get
                {
                    return ((int)(StiReport.ChangeType(this["dcAgencyAccountNumber"], typeof(int), true)));
                }
            }
            
            public virtual int dcAgencyFactoringActive
            {
                get
                {
                    return ((int)(StiReport.ChangeType(this["dcAgencyFactoringActive"], typeof(int), true)));
                }
            }
            
            public virtual int dcRemindersBeforeDebtCollection
            {
                get
                {
                    return ((int)(StiReport.ChangeType(this["dcRemindersBeforeDebtCollection"], typeof(int), true)));
                }
            }
            
            public virtual string DirAvtaleID
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["DirAvtaleID"], typeof(string), true)));
                }
            }
            
            public virtual int DiremBetAccount
            {
                get
                {
                    return ((int)(StiReport.ChangeType(this["DiremBetAccount"], typeof(int), true)));
                }
            }
            
            public virtual string DirKundeID
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["DirKundeID"], typeof(string), true)));
                }
            }
            
            public virtual int DirRemFilnavn
            {
                get
                {
                    return ((int)(StiReport.ChangeType(this["DirRemFilnavn"], typeof(int), true)));
                }
            }
            
            public virtual string EORInr
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["EORInr"], typeof(string), true)));
                }
            }
            
            public virtual short Foretaksregister
            {
                get
                {
                    return ((short)(StiReport.ChangeType(this["Foretaksregister"], typeof(short), true)));
                }
            }
            
            public virtual string IBANnr
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["IBANnr"], typeof(string), true)));
                }
            }
            
            public virtual string Katalog
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["Katalog"], typeof(string), true)));
                }
            }
            
            public virtual short Klientnr
            {
                get
                {
                    return ((short)(StiReport.ChangeType(this["Klientnr"], typeof(short), true)));
                }
            }
            
            public virtual string Kontaktpers
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["Kontaktpers"], typeof(string), true)));
                }
            }
            
            public virtual string Land
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["Land"], typeof(string), true)));
                }
            }
            
            public virtual string Landkode
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["Landkode"], typeof(string), true)));
                }
            }
            
            public virtual string Mailadr
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["Mailadr"], typeof(string), true)));
                }
            }
            
            public virtual string MainClientID
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["MainClientID"], typeof(string), true)));
                }
            }
            
            public virtual int mainClientNr
            {
                get
                {
                    return ((int)(StiReport.ChangeType(this["mainClientNr"], typeof(int), true)));
                }
            }
            
            public virtual string Mobil
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["Mobil"], typeof(string), true)));
                }
            }
            
            public virtual string MVAnr
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["MVAnr"], typeof(string), true)));
                }
            }
            
            public virtual string Navn
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["Navn"], typeof(string), true)));
                }
            }
            
            public virtual string NKLCustNo
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["NKLCustNo"], typeof(string), true)));
                }
            }
            
            public virtual string OCRAvtaleID
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["OCRAvtaleID"], typeof(string), true)));
                }
            }
            
            public virtual string OCRKundeID
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["OCRKundeID"], typeof(string), true)));
                }
            }
            
            public virtual string Postgiro
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["Postgiro"], typeof(string), true)));
                }
            }
            
            public virtual string Postnr
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["Postnr"], typeof(string), true)));
                }
            }
            
            public virtual string Poststed
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["Poststed"], typeof(string), true)));
                }
            }
            
            public virtual string RemitBankgiro
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["RemitBankgiro"], typeof(string), true)));
                }
            }
            
            public virtual short RoundRef
            {
                get
                {
                    return ((short)(StiReport.ChangeType(this["RoundRef"], typeof(short), true)));
                }
            }
            
            public virtual string SWIFTkode
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["SWIFTkode"], typeof(string), true)));
                }
            }
            
            public virtual string SWIFTkodeRembBank
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["SWIFTkodeRembBank"], typeof(string), true)));
                }
            }
            
            public virtual string TeleFax
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TeleFax"], typeof(string), true)));
                }
            }
            
            public virtual string Telefon
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["Telefon"], typeof(string), true)));
                }
            }
            
            public virtual string TPBrukerID
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TPBrukerID"], typeof(string), true)));
                }
            }
            
            public virtual string TPDivisjon
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TPDivisjon"], typeof(string), true)));
                }
            }
            
            public virtual string TPForetak
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TPForetak"], typeof(string), true)));
                }
            }
            
            public virtual string Url
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["Url"], typeof(string), true)));
                }
            }
            
            public virtual int UseInterimRetFil
            {
                get
                {
                    return ((int)(StiReport.ChangeType(this["UseInterimRetFil"], typeof(int), true)));
                }
            }
            
            public virtual int useModulus11
            {
                get
                {
                    return ((int)(StiReport.ChangeType(this["useModulus11"], typeof(int), true)));
                }
            }
            
            public virtual decimal Versjon
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["Versjon"], typeof(decimal), true)));
                }
            }
        }
        #endregion DataSource Bedrift
        
        #region DataSource Oppdrag
        public class OppdragDataSource : Stimulsoft.Report.Dictionary.StiSqlSource
        {
            
            public OppdragDataSource() : 
                    base("Connection", "Oppdrag", "Oppdrag", "", true, false, 30)
            {
            }
            
            public virtual int Oppdragsnr
            {
                get
                {
                    return ((int)(StiReport.ChangeType(this["Oppdragsnr"], typeof(int), true)));
                }
            }
            
            public virtual string startdato
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["startdato"], typeof(string), true)));
                }
            }
            
            public new virtual string Name
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["Name"], typeof(string), true)));
                }
            }
            
            public virtual string adresse
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["adresse"], typeof(string), true)));
                }
            }
            
            public virtual string kommune
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["kommune"], typeof(string), true)));
                }
            }
            
            public virtual string BoligType
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["BoligType"], typeof(string), true)));
                }
            }
            
            public virtual int varighet
            {
                get
                {
                    return ((int)(StiReport.ChangeType(this["varighet"], typeof(int), true)));
                }
            }
            
            public virtual string status
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["status"], typeof(string), true)));
                }
            }
            
            public virtual string Navn
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["Navn"], typeof(string), true)));
                }
            }
            
            public virtual int Ansatte_id
            {
                get
                {
                    return ((int)(StiReport.ChangeType(this["Ansatte_id"], typeof(int), true)));
                }
            }
        }
        #endregion DataSource Oppdrag
        
        #region DataSource Ansatte
        public class AnsatteDataSource : Stimulsoft.Report.Dictionary.StiSqlSource
        {
            
            public AnsatteDataSource() : 
                    base("Connection", "Ansatte", "Ansatte", "", true, false, 30)
            {
            }
            
            public virtual bool ErMegler
            {
                get
                {
                    return ((bool)(StiReport.ChangeType(this["ErMegler"], typeof(bool), true)));
                }
            }
            
            public virtual int Ansatte_id
            {
                get
                {
                    return ((int)(StiReport.ChangeType(this["Ansatte_id"], typeof(int), true)));
                }
            }
            
            public virtual int Omrade
            {
                get
                {
                    return ((int)(StiReport.ChangeType(this["Omrade"], typeof(int), true)));
                }
            }
            
            public virtual int uniBrukerId
            {
                get
                {
                    return ((int)(StiReport.ChangeType(this["uniBrukerId"], typeof(int), true)));
                }
            }
            
            public virtual short deaktivert
            {
                get
                {
                    return ((short)(StiReport.ChangeType(this["deaktivert"], typeof(short), true)));
                }
            }
            
            public virtual string Navn
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["Navn"], typeof(string), true)));
                }
            }
            
            public virtual string Stilling
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["Stilling"], typeof(string), true)));
                }
            }
            
            public virtual string E_post
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["E_post"], typeof(string), true)));
                }
            }
            
            public virtual string Telefon
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["Telefon"], typeof(string), true)));
                }
            }
            
            public virtual string Mobil
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["Mobil"], typeof(string), true)));
                }
            }
        }
        #endregion DataSource Ansatte
        #endregion StiReport Designer generated code - do not modify
    }
}
</Script>
  <ScriptLanguage>CSharp</ScriptLanguage>
  <Styles isList="true" count="3">
    <lightBlue Ref="46" type="Stimulsoft.Report.StiStyle" isKey="true">
      <Brush>[222:233:244]</Brush>
      <Conditions isList="true" count="0" />
      <Description />
      <Font>Arial,8</Font>
      <Name>lightBlue</Name>
      <TextBrush>Black</TextBrush>
    </lightBlue>
    <Style1 Ref="47" type="Stimulsoft.Report.StiStyle" isKey="true">
      <Brush>[146:187:205]</Brush>
      <Conditions isList="true" count="0" />
      <Description />
      <Font>Arial,8</Font>
      <Name>Style1</Name>
      <TextBrush>Black</TextBrush>
    </Style1>
    <LightGrey Ref="48" type="Stimulsoft.Report.StiStyle" isKey="true">
      <Brush>WhiteSmoke</Brush>
      <Conditions isList="true" count="0" />
      <Description />
      <Font>Arial,8</Font>
      <Name>LightGrey</Name>
      <TextBrush>Black</TextBrush>
    </LightGrey>
  </Styles>
</StiSerializer>